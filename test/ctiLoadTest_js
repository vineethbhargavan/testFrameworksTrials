var should = require('should');
require('it-each')({ testPerIteration: true });
var request = require('request');
var io = require('socket.io-client');
var socketURL = 'http://0.0.0.0:1234';
var options ={
  transports: ['websocket'],
  'forceNew': true
};
var client = io.connect(socketURL,options);
var data_driven = require('data-driven');
var users = [{name:'vineeth',password:'password',expected:'success'},{name:'vijith',password:'vineeth',expected:'failure'}];
describe('socket Interaction test' , function(){
	
	describe('handshake test',function(){
	it('should check if handshake is proper',function(done){
		//var client = io.connect(socketURL,options);
		client.on('connect',function(data){
			client.emit('handshake',{});
		});
		client.on('handshakeResponse',function(response){
			response.response.should.equal('success');
			done();
		});
	});

	});

	describe('Mutiple login Test',function(){
		it.each(users,'User Login Test',['element'],function(element,next){
			console.log('Elements'+element.expected);
			var expected = element.expected;
			client.emit('userAuthentication',{'name':element.name,'password':element.password},function(){
				next;
			});
				client.on('userAuthenticationResponse',function(response){
                        	        console.log('Resp'+response.status +'Expected'+expected);
                                	response.status.should.equal(element.expected);
	                                next;
        	                });
/*			client.on('userAuthenticationResponse',function(response){
				console.log('Resp'+response.status +'Expected'+expected);
				response.status.should.equal(element.expected);
				next;
			});*/
		});
	});
		
			
});
/*
describe('Test External Service',function(){
var url = 'http://localhost:2345';
	describe('Authenticate test',function(){
		url = url+'/authenticate?name=vineeth&password=vineeth@123';
		it('should validate authenticate response',function(done){
			request(url,function(error,response,body){
				body.should.equal('failure');
				done();
			});	
		});
	});
});
*/
